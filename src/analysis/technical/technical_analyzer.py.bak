"""
Analyse technique optimisée
"""
import pandas as pd
import pandas_ta as ta
import numpy as np

class TechnicalAnalyzer:
    def __init__(self):
        self.indicators = {
            'rsi': self.calculate_rsi,
            'macd': self.calculate_macd,
            'bbands': self.calculate_bbands
        }

    def calculate_rsi(self, df):
        """RSI qui fonctionne avec pandas_ta"""
        if not isinstance(df, pd.DataFrame):
            df = pd.DataFrame(df)
        return ta.rsi(df['close'], length=14)

    def calculate_macd(self, df):
        """MACD corrigé"""
        if not isinstance(df, pd.DataFrame):
            df = pd.DataFrame(df)
        macd = ta.macd(df['close'])
        return {
            'macd': macd['MACD_12_26_9'],
            'signal': macd['MACDs_12_26_9'],
            'histogram': macd['MACDh_12_26_9']
        }

    def calculate_bbands(self, df):
        """Bollinger Bands"""
        if not isinstance(df, pd.DataFrame):
            df = pd.DataFrame(df)
        bb = ta.bbands(df['close'])
        return {
            'upper': bb['BBU_5_2.0'],
            'middle': bb['BBM_5_2.0'],
            'lower': bb['BBL_5_2.0']
        }

    def analyze(self, df):
        """Analyse complète"""
        results = {}
        for name, func in self.indicators.items():
            try:
                results[name] = func(df)
            except Exception as e:
                print(f"Erreur dans {name}: {str(e)}")
                results[name] = None
        return results
