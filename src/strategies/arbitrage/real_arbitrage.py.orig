from typing import List, Tuple
from ..base import BaseStrategy
import ccxt

class USDCArbitrage(BaseStrategy):
    def __init__(self, config: dict):
        super().__init__(config)
        self.min_spread = config.get('min_spread', 0.002)
        self.exchanges = {
            'binance': ccxt.binance(),
            'gateio': ccxt.gateio()
        }

    def scan_all_pairs(self) -> dict:
        """Scan toutes les paires USDC disponibles"""
        opportunities = {}
        for name, exchange in self.exchanges.items():
            markets = exchange.load_markets()
            for symbol in markets:
                if symbol.endswith('/USDC'):
                    # Implémentation réelle du scan ici
                    opportunities[symbol] = 0.003  # Valeur exemple
        return opportunities

    def get_opportunities(self) -> List[Tuple[str, float]]:
        return [
            (pair, spread)
            for pair, spread in self.scan_all_pairs().items()
            if spread > self.min_spread
        ]

    def switch_broker(self, broker: str):
        """Change l'exchange principal"""
        if broker in self.exchanges:
            self.exchange = self.exchanges[broker]
